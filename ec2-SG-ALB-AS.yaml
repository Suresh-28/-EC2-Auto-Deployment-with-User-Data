---

AWSTemplateFormatVersion: "2010-09-09"
Description: Auto Scaling Group with ALB and EC2 User Data

Parameters:
  AMID:
    Type: String
    Default: ami-0f88e80871fd81e91                      
    AllowedValues:                      
      - ami-0f88e80871fd81e91
      - ami-09cb80360d5069de4

  AIT:
    Type: String
    Default: t2.micro                      
    AllowedValues:                      
      - t2.micro
      - t3.micro

Resources:

  WebserverSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP access from ALB
      VpcId: vpc-081475311b9976143
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref LoadBalancerSG
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  LoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP from anywhere to ALB
      VpcId: vpc-081475311b9976143
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  WebserverLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: webserver-launch-template01
      LaunchTemplateData:
        ImageId: !Ref AMID
        InstanceType: !Ref AIT
        SecurityGroupIds:
          - !Ref WebserverSecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum update -y
            yum install -y httpd
            systemctl start httpd.service
            systemctl enable httpd.service
            echo "Hello from AWS CloudFormation - $(curl http://169.254.169.254/latest/meta-data/public-ipv4)" > /var/www/html/index.html

  AppLoadbalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Subnets: 
        - subnet-0c634c83ca471884e
        - subnet-062e537efa0c5725c
      SecurityGroups:
        - !Ref LoadBalancerSG
      Type: application

  ApplicationLoadbalancerTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: vpc-081475311b9976143
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckPort: traffic-port

  ApplicationLoadbalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: 
        - TargetGroupArn : !Ref ApplicationLoadbalancerTargetGroup
          Type : forward
      LoadBalancerArn: !Ref AppLoadbalancer
      Port: 80
      Protocol: HTTP

  WebserverAutoscale:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: sASG
      AvailabilityZones: 
        - us-east-1a
        - us-east-1b
      DesiredCapacity: 2
      MaxSize: 2
      MinSize: 1
      TargetGroupARNs: 
        - !Ref ApplicationLoadbalancerTargetGroup
      VPCZoneIdentifier: 
        - subnet-0c634c83ca471884e
        - subnet-062e537efa0c5725c
      LaunchTemplate:
        LaunchTemplateId: !Ref WebserverLaunchTemplate
        Version: !GetAtt WebserverLaunchTemplate.LatestVersionNumber